#!/usr/bin/python  
#
# Problem 12
# 08 March 2002
#
# The sequence of triangle numbers is generated by
# adding the natural numbers. So the 7th triangle number is
# 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms are:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# (snip)
#
# What is the value of the first triangle number to have over
# five hundred divisors?

from math import sqrt

def triangular(start=1):
    cnt=start
    n=cnt*(cnt+1)/2
    while True:
        yield n
        cnt+=1
        n+=cnt

def factor(num):
    limit, ret = int(sqrt(num)), 0
    for i in range(1,limit+1):
        quotient, remainder = divmod(num,i)
        if remainder==0:
            ret += 1 if quotient==i else 2
    return ret

maxNum, maxDiv, n = 0,0, 500
for num in triangular(n):
    div = factor(num)
    if div>maxDiv:
        print ("%i has %i divisors" % (num, div))
        maxNum, maxDiv = num, div
    if maxDiv>=n: break
